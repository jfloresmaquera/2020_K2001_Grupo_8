Estado 2 conflictos: 10 desplazamiento(s)/reducción(ones)
Estado 4 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 14 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 15 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 16 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 17 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 18 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 19 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 20 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 21 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 23 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 24 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 25 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 27 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 28 conflictos: 10 reducción(ones)/reducción(ones)
Estado 35 conflictos: 1 reducción(ones)/reducción(ones)
Estado 49 conflictos: 2 desplazamiento(s)/reducción(ones)
Estado 60 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 87 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 88 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 89 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 90 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 91 conflictos: 1 reducción(ones)/reducción(ones)
Estado 93 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 99 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 104 conflictos: 1 reducción(ones)/reducción(ones)
Estado 135 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 143 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 145 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 148 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 149 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 150 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 151 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 152 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 153 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 154 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 155 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 156 conflictos: 10 desplazamiento/reducción, 3 reducción/reducción
Estado 161 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 162 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 163 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 164 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 165 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 166 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 167 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 168 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 169 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 170 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 171 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 172 conflictos: 12 desplazamiento(s)/reducción(ones)
Estado 189 conflictos: 1 reducción(ones)/reducción(ones)
Estado 198 conflictos: 13 reducción(ones)/reducción(ones)
Estado 215 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 227 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 236 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 251 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 253 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción
Estado 254 conflictos: 10 desplazamiento/reducción, 2 reducción/reducción
Estado 271 conflictos: 10 desplazamiento/reducción, 1 reducción/reducción


Gramática

    0 $accept: input $end

    1 input: /* vacío */
    2      | input line
    3      | ERROR_LEXICO

    4 line: '\n'
    5     | listadoDeSentenciasDeDeclaracion saltoOpcional
    6     | invocacionFuncion saltoOpcional
    7     | prototipoFuncion saltoOpcional
    8     | desarrolloFuncion saltoOpcional
    9     | sentenciaSwitch saltoOpcional
   10     | sentenciaWhile saltoOpcional
   11     | sentenciaFor saltoOpcional
   12     | sentenciaDoWhile saltoOpcional
   13     | sentenciaIfElse saltoOpcional
   14     | sentenciaAsignacion saltoOpcional
   15     | incrementoDecremento saltoOpcional
   16     | error saltoOpcional

   17 saltoOpcional: /* vacío */
   18              | '\n' saltoOpcional

   19 invocacionFuncion: IDENTIFICADOR '(' listaParametrosInvocacion ')' ';'

   20 listadoDeSentencias: /* vacío */
   21                    | sentenciaSwitch listadoDeSentencias
   22                    | sentenciaDoWhile listadoDeSentencias
   23                    | sentenciaFor listadoDeSentencias
   24                    | sentenciaWhile listadoDeSentencias
   25                    | sentenciaIfElse listadoDeSentencias
   26                    | sentenciaAsignacion listadoDeSentencias
   27                    | sentenciaReturn listadoDeSentencias
   28                    | listadoDeSentenciasDeDeclaracion listadoDeSentencias
   29                    | invocacionFuncion saltoOpcional
   30                    | incrementoDecremento listadoDeSentencias
   31                    | '\n' listadoDeSentencias

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE '(' exp ')' ';'

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'

   34 sentenciaDecOAsig: sentenciaAsignacion
   35                  | sentenciaDeclaracion

   36 incrementoParaFor: IDENTIFICADOR incrementoParaForAuxiliar

   37 incrementoParaForAuxiliar: MAS_MAS MENOS_MENOS

   38 incrementoDecremento: IDENTIFICADOR MAS_MAS ';'
   39                     | IDENTIFICADOR MENOS_MENOS ';'

   40 $@1: /* vacío */

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse
   42                | error saltoOpcional

   43 sentenciaElse: /* vacío */
   44              | ELSE saltoOpcional '{' listadoDeSentencias '}'

   45 sentenciaWhile: WHILE '(' exp ')' saltoOpcional '{' listadoDeSentencias '}'

   46 sentenciaSwitch: SWITCH '(' exp ')' saltoOpcional '{' sentenciaCase '}'

   47 sentenciaCase: /* vacío */
   48              | CASE exp ':' listadoDeSentencias BREAK ';'
   49              | sentenciaCase DEFAULT ':' listadoDeSentencias

   50 sentenciaReturn: RETURN exp ';'

   51 listadoDeSentenciasDeDeclaracion: /* vacío */
   52                                 | sentenciaDeclaracion
   53                                 | sentenciaDeclaracion ';' listadoDeSentenciasDeDeclaracion

   54 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR opcional1 ';'
   55                     | TIPO_DATO listaIdentificadores ';'
   56                     | TIPO_DATO IDENTIFICADOR '[' expC ']' ';'
   57                     | TIPO_DATO IDENTIFICADOR '[' expC ']' '=' '{' auxi '}' ';'
   58                     | TIPO_DATO '*' IDENTIFICADOR ';'
   59                     | error saltoOpcional

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' ';'

   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosPrototipo ')' ';'

   62 opcional1: /* vacío */
   63          | sentenciaAsignacionAuxiliar exp

   64 auxi: expC ',' auxi
   65     | expC

   66 sentenciaAsignacion: parametro sentenciaAsignacionAuxiliar exp ';'

   67 sentenciaAsignacionAuxiliar: '='
   68                            | MAS_IGUAL
   69                            | MENOS_IGUAL
   70                            | POR_IGUAL
   71                            | DIVIDIDO_IGUAL

   72 parametro: IDENTIFICADOR

   73 listaIdentificadores: identificadorA
   74                     | listaIdentificadores ',' identificadorA

   75 identificadorA: IDENTIFICADOR
   76               | IDENTIFICADOR '=' exp
   77               | IDENTIFICADOR MAS_IGUAL exp
   78               | IDENTIFICADOR MENOS_IGUAL exp
   79               | IDENTIFICADOR POR_IGUAL exp
   80               | IDENTIFICADOR DIVIDIDO_IGUAL exp

   81 listaParametrosPrototipo: /* vacío */
   82                         | TIPO_DATO
   83                         | TIPO_DATO ',' listaParametrosPrototipo
   84                         | listaParametrosFuncion

   85 listaParametrosFuncion: /* vacío */
   86                       | TIPO_DATO IDENTIFICADOR
   87                       | TIPO_DATO IDENTIFICADOR ',' listaParametrosFuncion

   88 listaParametrosInvocacion: /* vacío */
   89                          | noTerminal listaParametrosInvocacionAuxiliar

   90 listaParametrosInvocacionAuxiliar: ',' noTerminal listaParametrosInvocacionAuxiliar
   91                                  | /* vacío */

   92 noTerminal: IDENTIFICADOR
   93           | CHAR
   94           | DECIMAL
   95           | HEXA
   96           | OCTAL
   97           | NUM_R
   98           | noTerminalFinal IGUALDAD noTerminalFinal
   99           | noTerminalFinal MAYOR_IGUAL noTerminalFinal
  100           | noTerminalFinal MENOR_IGUAL noTerminalFinal
  101           | noTerminalFinal DESIGUALDAD noTerminalFinal
  102           | noTerminalFinal AND noTerminalFinal
  103           | noTerminalFinal OR noTerminalFinal

  104 noTerminalFinal: IDENTIFICADOR
  105                | CHAR
  106                | DECIMAL
  107                | HEXA
  108                | OCTAL
  109                | NUM_R

  110 exp: LITERAL_CADENA
  111    | expC

  112 expC: IDENTIFICADOR
  113     | CHAR
  114     | expC '+' expC
  115     | expC '-' expC
  116     | expC '>' expC
  117     | expC '<' expC
  118     | expC IGUALDAD expC
  119     | expC MAYOR_IGUAL expC
  120     | expC MENOR_IGUAL expC
  121     | expC DESIGUALDAD expC
  122     | expC AND expC
  123     | expC OR expC
  124     | DECIMAL
  125     | HEXA
  126     | OCTAL
  127     | NUM_R
  128     | expC '*' expC
  129     | expC '/' expC


Terminales con las reglas donde aparecen

$end (0) 0
'\n' (10) 4 18 31
'(' (40) 19 32 33 41 45 46 60 61
')' (41) 19 32 33 41 45 46 60 61
'*' (42) 58 128
'+' (43) 114
',' (44) 64 74 83 87 90
'-' (45) 115
'/' (47) 129
':' (58) 48 49
';' (59) 19 32 33 38 39 48 50 53 54 55 56 57 58 60 61 66
'<' (60) 117
'=' (61) 57 67 76
'>' (62) 116
'[' (91) 56 57
']' (93) 56 57
'{' (123) 32 33 41 44 45 46 57 60
'}' (125) 32 33 41 44 45 46 57 60
error (256) 16 42 59
FOR (258) 33
IF (259) 41
ELSE (260) 44
RETURN (261) 50
SWITCH (262) 46
DECIMAL (263) 94 106 124
HEXA (264) 95 107 125
OCTAL (265) 96 108 126
NUM_R (266) 97 109 127
IDENTIFICADOR (267) 19 36 38 39 54 56 57 58 60 61 72 75 76 77 78 79
    80 86 87 92 104 112
TIPO_DATO (268) 54 55 56 57 58 60 61 82 83 86 87
DO (269) 32
WHILE (270) 32 45
CHAR (271) 93 105 113
LITERAL_CADENA (272) 110
MAYOR_IGUAL (273) 99 119
MENOR_IGUAL (274) 100 120
IGUALDAD (275) 98 118
AND (276) 102 122
OR (277) 103 123
DESIGUALDAD (278) 101 121
CASE (279) 48
BREAK (280) 48
DEFAULT (281) 49
MAS_IGUAL (282) 68 77
MENOS_IGUAL (283) 69 78
POR_IGUAL (284) 70 79
DIVIDIDO_IGUAL (285) 71 80
MAS_MAS (286) 37 38
MENOS_MENOS (287) 37 39
ERROR_LEXICO (288) 3


No terminales con las reglas donde aparecen

$accept (51)
    en la izquierda: 0
input (52)
    en la izquierda: 1 2 3, en la derecha: 0 2
line (53)
    en la izquierda: 4 5 6 7 8 9 10 11 12 13 14 15 16, en la derecha:
    2
saltoOpcional (54)
    en la izquierda: 17 18, en la derecha: 5 6 7 8 9 10 11 12 13 14
    15 16 18 29 32 33 41 42 44 45 46 59 60
invocacionFuncion (55)
    en la izquierda: 19, en la derecha: 6 29
listadoDeSentencias (56)
    en la izquierda: 20 21 22 23 24 25 26 27 28 29 30 31, en la derecha:
    21 22 23 24 25 26 27 28 30 31 32 33 41 44 45 48 49 60
sentenciaDoWhile (57)
    en la izquierda: 32, en la derecha: 12 22
sentenciaFor (58)
    en la izquierda: 33, en la derecha: 11 23
sentenciaDecOAsig (59)
    en la izquierda: 34 35, en la derecha: 33
incrementoParaFor (60)
    en la izquierda: 36, en la derecha: 33
incrementoParaForAuxiliar (61)
    en la izquierda: 37, en la derecha: 36
incrementoDecremento (62)
    en la izquierda: 38 39, en la derecha: 15 30
sentenciaIfElse (63)
    en la izquierda: 41 42, en la derecha: 13 25
$@1 (64)
    en la izquierda: 40, en la derecha: 41
sentenciaElse (65)
    en la izquierda: 43 44, en la derecha: 41
sentenciaWhile (66)
    en la izquierda: 45, en la derecha: 10 24
sentenciaSwitch (67)
    en la izquierda: 46, en la derecha: 9 21
sentenciaCase (68)
    en la izquierda: 47 48 49, en la derecha: 46 49
sentenciaReturn (69)
    en la izquierda: 50, en la derecha: 27
listadoDeSentenciasDeDeclaracion (70)
    en la izquierda: 51 52 53, en la derecha: 5 28 53
sentenciaDeclaracion (71)
    en la izquierda: 54 55 56 57 58 59, en la derecha: 35 52 53
desarrolloFuncion (72)
    en la izquierda: 60, en la derecha: 8
prototipoFuncion (73)
    en la izquierda: 61, en la derecha: 7
opcional1 (74)
    en la izquierda: 62 63, en la derecha: 54
auxi (75)
    en la izquierda: 64 65, en la derecha: 57 64
sentenciaAsignacion (76)
    en la izquierda: 66, en la derecha: 14 26 34
sentenciaAsignacionAuxiliar (77)
    en la izquierda: 67 68 69 70 71, en la derecha: 63 66
parametro (78)
    en la izquierda: 72, en la derecha: 66
listaIdentificadores (79)
    en la izquierda: 73 74, en la derecha: 55 74
identificadorA (80)
    en la izquierda: 75 76 77 78 79 80, en la derecha: 73 74
listaParametrosPrototipo (81)
    en la izquierda: 81 82 83 84, en la derecha: 61 83
listaParametrosFuncion (82)
    en la izquierda: 85 86 87, en la derecha: 60 84 87
listaParametrosInvocacion (83)
    en la izquierda: 88 89, en la derecha: 19
listaParametrosInvocacionAuxiliar (84)
    en la izquierda: 90 91, en la derecha: 89 90
noTerminal (85)
    en la izquierda: 92 93 94 95 96 97 98 99 100 101 102 103, en la derecha:
    89 90
noTerminalFinal (86)
    en la izquierda: 104 105 106 107 108 109, en la derecha: 98 99
    100 101 102 103
exp (87)
    en la izquierda: 110 111, en la derecha: 32 41 45 46 48 50 63 66
    76 77 78 79 80
expC (88)
    en la izquierda: 112 113 114 115 116 117 118 119 120 121 122 123
    124 125 126 127 128 129, en la derecha: 33 56 57 64 65 111 114
    115 116 117 118 119 120 121 122 123 128 129


estado 0

    0 $accept: . input $end

    ERROR_LEXICO  desplazar e ir al estado 1

    $default  reduce usando la regla 1 (input)

    input  ir al estado 2


estado 1

    3 input: ERROR_LEXICO .

    $default  reduce usando la regla 3 (input)


estado 2

    0 $accept: input . $end
    2 input: input . line

    $end           desplazar e ir al estado 3
    error          desplazar e ir al estado 4
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 9
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 12

    $end           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    line                              ir al estado 13
    invocacionFuncion                 ir al estado 14
    sentenciaDoWhile                  ir al estado 15
    sentenciaFor                      ir al estado 16
    incrementoDecremento              ir al estado 17
    sentenciaIfElse                   ir al estado 18
    sentenciaWhile                    ir al estado 19
    sentenciaSwitch                   ir al estado 20
    listadoDeSentenciasDeDeclaracion  ir al estado 21
    sentenciaDeclaracion              ir al estado 22
    desarrolloFuncion                 ir al estado 23
    prototipoFuncion                  ir al estado 24
    sentenciaAsignacion               ir al estado 25
    parametro                         ir al estado 26


estado 3

    0 $accept: input $end .

    $default  aceptar


estado 4

   16 line: error . saltoOpcional
   42 sentenciaIfElse: error . saltoOpcional
   59 sentenciaDeclaracion: error . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 28


estado 5

   33 sentenciaFor: FOR . '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'

    '('  desplazar e ir al estado 29


estado 6

   41 sentenciaIfElse: IF . '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse

    '('  desplazar e ir al estado 30


estado 7

   46 sentenciaSwitch: SWITCH . '(' exp ')' saltoOpcional '{' sentenciaCase '}'

    '('  desplazar e ir al estado 31


estado 8

   19 invocacionFuncion: IDENTIFICADOR . '(' listaParametrosInvocacion ')' ';'
   38 incrementoDecremento: IDENTIFICADOR . MAS_MAS ';'
   39                     | IDENTIFICADOR . MENOS_MENOS ';'
   72 parametro: IDENTIFICADOR .

    MAS_MAS      desplazar e ir al estado 32
    MENOS_MENOS  desplazar e ir al estado 33
    '('          desplazar e ir al estado 34

    $default  reduce usando la regla 72 (parametro)


estado 9

   54 sentenciaDeclaracion: TIPO_DATO . IDENTIFICADOR opcional1 ';'
   55                     | TIPO_DATO . listaIdentificadores ';'
   56                     | TIPO_DATO . IDENTIFICADOR '[' expC ']' ';'
   57                     | TIPO_DATO . IDENTIFICADOR '[' expC ']' '=' '{' auxi '}' ';'
   58                     | TIPO_DATO . '*' IDENTIFICADOR ';'
   60 desarrolloFuncion: TIPO_DATO . IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' ';'
   61 prototipoFuncion: TIPO_DATO . IDENTIFICADOR '(' listaParametrosPrototipo ')' ';'

    IDENTIFICADOR  desplazar e ir al estado 35
    '*'            desplazar e ir al estado 36

    listaIdentificadores  ir al estado 37
    identificadorA        ir al estado 38


estado 10

   32 sentenciaDoWhile: DO . saltoOpcional '{' listadoDeSentencias '}' WHILE '(' exp ')' ';'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 39


estado 11

   45 sentenciaWhile: WHILE . '(' exp ')' saltoOpcional '{' listadoDeSentencias '}'

    '('  desplazar e ir al estado 40


estado 12

    4 line: '\n' .

    $default  reduce usando la regla 4 (line)


estado 13

    2 input: input line .

    $default  reduce usando la regla 2 (input)


estado 14

    6 line: invocacionFuncion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 41


estado 15

   12 line: sentenciaDoWhile . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 42


estado 16

   11 line: sentenciaFor . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 43


estado 17

   15 line: incrementoDecremento . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 44


estado 18

   13 line: sentenciaIfElse . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 45


estado 19

   10 line: sentenciaWhile . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 46


estado 20

    9 line: sentenciaSwitch . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 47


estado 21

    5 line: listadoDeSentenciasDeDeclaracion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 48


estado 22

   52 listadoDeSentenciasDeDeclaracion: sentenciaDeclaracion .
   53                                 | sentenciaDeclaracion . ';' listadoDeSentenciasDeDeclaracion

    ';'  desplazar e ir al estado 49

    $default  reduce usando la regla 52 (listadoDeSentenciasDeDeclaracion)


estado 23

    8 line: desarrolloFuncion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 50


estado 24

    7 line: prototipoFuncion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 51


estado 25

   14 line: sentenciaAsignacion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 52


estado 26

   66 sentenciaAsignacion: parametro . sentenciaAsignacionAuxiliar exp ';'

    MAS_IGUAL       desplazar e ir al estado 53
    MENOS_IGUAL     desplazar e ir al estado 54
    POR_IGUAL       desplazar e ir al estado 55
    DIVIDIDO_IGUAL  desplazar e ir al estado 56
    '='             desplazar e ir al estado 57

    sentenciaAsignacionAuxiliar  ir al estado 58


estado 27

   18 saltoOpcional: '\n' . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 59


estado 28

   16 line: error saltoOpcional .
   42 sentenciaIfElse: error saltoOpcional .
   59 sentenciaDeclaracion: error saltoOpcional .

    $end           reduce usando la regla 16 (line)
    $end           [reduce usando la regla 42 (sentenciaIfElse)]
    $end           [reduce usando la regla 59 (sentenciaDeclaracion)]
    error          reduce usando la regla 16 (line)
    error          [reduce usando la regla 42 (sentenciaIfElse)]
    error          [reduce usando la regla 59 (sentenciaDeclaracion)]
    FOR            reduce usando la regla 16 (line)
    FOR            [reduce usando la regla 42 (sentenciaIfElse)]
    FOR            [reduce usando la regla 59 (sentenciaDeclaracion)]
    IF             reduce usando la regla 16 (line)
    IF             [reduce usando la regla 42 (sentenciaIfElse)]
    IF             [reduce usando la regla 59 (sentenciaDeclaracion)]
    SWITCH         reduce usando la regla 16 (line)
    SWITCH         [reduce usando la regla 42 (sentenciaIfElse)]
    SWITCH         [reduce usando la regla 59 (sentenciaDeclaracion)]
    IDENTIFICADOR  reduce usando la regla 16 (line)
    IDENTIFICADOR  [reduce usando la regla 42 (sentenciaIfElse)]
    IDENTIFICADOR  [reduce usando la regla 59 (sentenciaDeclaracion)]
    TIPO_DATO      reduce usando la regla 16 (line)
    TIPO_DATO      [reduce usando la regla 42 (sentenciaIfElse)]
    TIPO_DATO      [reduce usando la regla 59 (sentenciaDeclaracion)]
    DO             reduce usando la regla 16 (line)
    DO             [reduce usando la regla 42 (sentenciaIfElse)]
    DO             [reduce usando la regla 59 (sentenciaDeclaracion)]
    WHILE          reduce usando la regla 16 (line)
    WHILE          [reduce usando la regla 42 (sentenciaIfElse)]
    WHILE          [reduce usando la regla 59 (sentenciaDeclaracion)]
    '\n'           reduce usando la regla 16 (line)
    '\n'           [reduce usando la regla 42 (sentenciaIfElse)]
    '\n'           [reduce usando la regla 59 (sentenciaDeclaracion)]
    ';'            reduce usando la regla 59 (sentenciaDeclaracion)
    $default       reduce usando la regla 16 (line)


estado 29

   33 sentenciaFor: FOR '(' . sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'

    error          desplazar e ir al estado 60
    IDENTIFICADOR  desplazar e ir al estado 61
    TIPO_DATO      desplazar e ir al estado 62

    sentenciaDecOAsig     ir al estado 63
    sentenciaDeclaracion  ir al estado 64
    sentenciaAsignacion   ir al estado 65
    parametro             ir al estado 26


estado 30

   41 sentenciaIfElse: IF '(' . exp ')' saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 73
    expC  ir al estado 74


estado 31

   46 sentenciaSwitch: SWITCH '(' . exp ')' saltoOpcional '{' sentenciaCase '}'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 75
    expC  ir al estado 74


estado 32

   38 incrementoDecremento: IDENTIFICADOR MAS_MAS . ';'

    ';'  desplazar e ir al estado 76


estado 33

   39 incrementoDecremento: IDENTIFICADOR MENOS_MENOS . ';'

    ';'  desplazar e ir al estado 77


estado 34

   19 invocacionFuncion: IDENTIFICADOR '(' . listaParametrosInvocacion ')' ';'

    DECIMAL        desplazar e ir al estado 78
    HEXA           desplazar e ir al estado 79
    OCTAL          desplazar e ir al estado 80
    NUM_R          desplazar e ir al estado 81
    IDENTIFICADOR  desplazar e ir al estado 82
    CHAR           desplazar e ir al estado 83

    $default  reduce usando la regla 88 (listaParametrosInvocacion)

    listaParametrosInvocacion  ir al estado 84
    noTerminal                 ir al estado 85
    noTerminalFinal            ir al estado 86


estado 35

   54 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR . opcional1 ';'
   56                     | TIPO_DATO IDENTIFICADOR . '[' expC ']' ';'
   57                     | TIPO_DATO IDENTIFICADOR . '[' expC ']' '=' '{' auxi '}' ';'
   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR . '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' ';'
   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR . '(' listaParametrosPrototipo ')' ';'
   75 identificadorA: IDENTIFICADOR .
   76               | IDENTIFICADOR . '=' exp
   77               | IDENTIFICADOR . MAS_IGUAL exp
   78               | IDENTIFICADOR . MENOS_IGUAL exp
   79               | IDENTIFICADOR . POR_IGUAL exp
   80               | IDENTIFICADOR . DIVIDIDO_IGUAL exp

    MAS_IGUAL       desplazar e ir al estado 87
    MENOS_IGUAL     desplazar e ir al estado 88
    POR_IGUAL       desplazar e ir al estado 89
    DIVIDIDO_IGUAL  desplazar e ir al estado 90
    '('             desplazar e ir al estado 91
    '['             desplazar e ir al estado 92
    '='             desplazar e ir al estado 93

    ';'       reduce usando la regla 62 (opcional1)
    ';'       [reduce usando la regla 75 (identificadorA)]
    ','       reduce usando la regla 75 (identificadorA)
    $default  reduce usando la regla 62 (opcional1)

    opcional1                    ir al estado 94
    sentenciaAsignacionAuxiliar  ir al estado 95


estado 36

   58 sentenciaDeclaracion: TIPO_DATO '*' . IDENTIFICADOR ';'

    IDENTIFICADOR  desplazar e ir al estado 96


estado 37

   55 sentenciaDeclaracion: TIPO_DATO listaIdentificadores . ';'
   74 listaIdentificadores: listaIdentificadores . ',' identificadorA

    ';'  desplazar e ir al estado 97
    ','  desplazar e ir al estado 98


estado 38

   73 listaIdentificadores: identificadorA .

    $default  reduce usando la regla 73 (listaIdentificadores)


estado 39

   32 sentenciaDoWhile: DO saltoOpcional . '{' listadoDeSentencias '}' WHILE '(' exp ')' ';'

    '{'  desplazar e ir al estado 99


estado 40

   45 sentenciaWhile: WHILE '(' . exp ')' saltoOpcional '{' listadoDeSentencias '}'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 100
    expC  ir al estado 74


estado 41

    6 line: invocacionFuncion saltoOpcional .

    $default  reduce usando la regla 6 (line)


estado 42

   12 line: sentenciaDoWhile saltoOpcional .

    $default  reduce usando la regla 12 (line)


estado 43

   11 line: sentenciaFor saltoOpcional .

    $default  reduce usando la regla 11 (line)


estado 44

   15 line: incrementoDecremento saltoOpcional .

    $default  reduce usando la regla 15 (line)


estado 45

   13 line: sentenciaIfElse saltoOpcional .

    $default  reduce usando la regla 13 (line)


estado 46

   10 line: sentenciaWhile saltoOpcional .

    $default  reduce usando la regla 10 (line)


estado 47

    9 line: sentenciaSwitch saltoOpcional .

    $default  reduce usando la regla 9 (line)


estado 48

    5 line: listadoDeSentenciasDeDeclaracion saltoOpcional .

    $default  reduce usando la regla 5 (line)


estado 49

   53 listadoDeSentenciasDeDeclaracion: sentenciaDeclaracion ';' . listadoDeSentenciasDeDeclaracion

    error      desplazar e ir al estado 60
    TIPO_DATO  desplazar e ir al estado 62

    $end           reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    IF             reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    RETURN         reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    SWITCH         reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    IDENTIFICADOR  reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    WHILE          reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    BREAK          reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    DEFAULT        reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    '\n'           reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)
    '}'            reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)

    listadoDeSentenciasDeDeclaracion  ir al estado 101
    sentenciaDeclaracion              ir al estado 22


estado 50

    8 line: desarrolloFuncion saltoOpcional .

    $default  reduce usando la regla 8 (line)


estado 51

    7 line: prototipoFuncion saltoOpcional .

    $default  reduce usando la regla 7 (line)


estado 52

   14 line: sentenciaAsignacion saltoOpcional .

    $default  reduce usando la regla 14 (line)


estado 53

   68 sentenciaAsignacionAuxiliar: MAS_IGUAL .

    $default  reduce usando la regla 68 (sentenciaAsignacionAuxiliar)


estado 54

   69 sentenciaAsignacionAuxiliar: MENOS_IGUAL .

    $default  reduce usando la regla 69 (sentenciaAsignacionAuxiliar)


estado 55

   70 sentenciaAsignacionAuxiliar: POR_IGUAL .

    $default  reduce usando la regla 70 (sentenciaAsignacionAuxiliar)


estado 56

   71 sentenciaAsignacionAuxiliar: DIVIDIDO_IGUAL .

    $default  reduce usando la regla 71 (sentenciaAsignacionAuxiliar)


estado 57

   67 sentenciaAsignacionAuxiliar: '=' .

    $default  reduce usando la regla 67 (sentenciaAsignacionAuxiliar)


estado 58

   66 sentenciaAsignacion: parametro sentenciaAsignacionAuxiliar . exp ';'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 102
    expC  ir al estado 74


estado 59

   18 saltoOpcional: '\n' saltoOpcional .

    $default  reduce usando la regla 18 (saltoOpcional)


estado 60

   59 sentenciaDeclaracion: error . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 103


estado 61

   72 parametro: IDENTIFICADOR .

    $default  reduce usando la regla 72 (parametro)


estado 62

   54 sentenciaDeclaracion: TIPO_DATO . IDENTIFICADOR opcional1 ';'
   55                     | TIPO_DATO . listaIdentificadores ';'
   56                     | TIPO_DATO . IDENTIFICADOR '[' expC ']' ';'
   57                     | TIPO_DATO . IDENTIFICADOR '[' expC ']' '=' '{' auxi '}' ';'
   58                     | TIPO_DATO . '*' IDENTIFICADOR ';'

    IDENTIFICADOR  desplazar e ir al estado 104
    '*'            desplazar e ir al estado 36

    listaIdentificadores  ir al estado 37
    identificadorA        ir al estado 38


estado 63

   33 sentenciaFor: FOR '(' sentenciaDecOAsig . expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 105


estado 64

   35 sentenciaDecOAsig: sentenciaDeclaracion .

    $default  reduce usando la regla 35 (sentenciaDecOAsig)


estado 65

   34 sentenciaDecOAsig: sentenciaAsignacion .

    $default  reduce usando la regla 34 (sentenciaDecOAsig)


estado 66

  124 expC: DECIMAL .

    $default  reduce usando la regla 124 (expC)


estado 67

  125 expC: HEXA .

    $default  reduce usando la regla 125 (expC)


estado 68

  126 expC: OCTAL .

    $default  reduce usando la regla 126 (expC)


estado 69

  127 expC: NUM_R .

    $default  reduce usando la regla 127 (expC)


estado 70

  112 expC: IDENTIFICADOR .

    $default  reduce usando la regla 112 (expC)


estado 71

  113 expC: CHAR .

    $default  reduce usando la regla 113 (expC)


estado 72

  110 exp: LITERAL_CADENA .

    $default  reduce usando la regla 110 (exp)


estado 73

   41 sentenciaIfElse: IF '(' exp . ')' saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse

    ')'  desplazar e ir al estado 106


estado 74

  111 exp: expC .
  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    $default  reduce usando la regla 111 (exp)


estado 75

   46 sentenciaSwitch: SWITCH '(' exp . ')' saltoOpcional '{' sentenciaCase '}'

    ')'  desplazar e ir al estado 119


estado 76

   38 incrementoDecremento: IDENTIFICADOR MAS_MAS ';' .

    $default  reduce usando la regla 38 (incrementoDecremento)


estado 77

   39 incrementoDecremento: IDENTIFICADOR MENOS_MENOS ';' .

    $default  reduce usando la regla 39 (incrementoDecremento)


estado 78

   94 noTerminal: DECIMAL .
  106 noTerminalFinal: DECIMAL .

    ')'       reduce usando la regla 94 (noTerminal)
    ','       reduce usando la regla 94 (noTerminal)
    $default  reduce usando la regla 106 (noTerminalFinal)


estado 79

   95 noTerminal: HEXA .
  107 noTerminalFinal: HEXA .

    ')'       reduce usando la regla 95 (noTerminal)
    ','       reduce usando la regla 95 (noTerminal)
    $default  reduce usando la regla 107 (noTerminalFinal)


estado 80

   96 noTerminal: OCTAL .
  108 noTerminalFinal: OCTAL .

    ')'       reduce usando la regla 96 (noTerminal)
    ','       reduce usando la regla 96 (noTerminal)
    $default  reduce usando la regla 108 (noTerminalFinal)


estado 81

   97 noTerminal: NUM_R .
  109 noTerminalFinal: NUM_R .

    ')'       reduce usando la regla 97 (noTerminal)
    ','       reduce usando la regla 97 (noTerminal)
    $default  reduce usando la regla 109 (noTerminalFinal)


estado 82

   92 noTerminal: IDENTIFICADOR .
  104 noTerminalFinal: IDENTIFICADOR .

    ')'       reduce usando la regla 92 (noTerminal)
    ','       reduce usando la regla 92 (noTerminal)
    $default  reduce usando la regla 104 (noTerminalFinal)


estado 83

   93 noTerminal: CHAR .
  105 noTerminalFinal: CHAR .

    ')'       reduce usando la regla 93 (noTerminal)
    ','       reduce usando la regla 93 (noTerminal)
    $default  reduce usando la regla 105 (noTerminalFinal)


estado 84

   19 invocacionFuncion: IDENTIFICADOR '(' listaParametrosInvocacion . ')' ';'

    ')'  desplazar e ir al estado 120


estado 85

   89 listaParametrosInvocacion: noTerminal . listaParametrosInvocacionAuxiliar

    ','  desplazar e ir al estado 121

    $default  reduce usando la regla 91 (listaParametrosInvocacionAuxiliar)

    listaParametrosInvocacionAuxiliar  ir al estado 122


estado 86

   98 noTerminal: noTerminalFinal . IGUALDAD noTerminalFinal
   99           | noTerminalFinal . MAYOR_IGUAL noTerminalFinal
  100           | noTerminalFinal . MENOR_IGUAL noTerminalFinal
  101           | noTerminalFinal . DESIGUALDAD noTerminalFinal
  102           | noTerminalFinal . AND noTerminalFinal
  103           | noTerminalFinal . OR noTerminalFinal

    MAYOR_IGUAL  desplazar e ir al estado 123
    MENOR_IGUAL  desplazar e ir al estado 124
    IGUALDAD     desplazar e ir al estado 125
    AND          desplazar e ir al estado 126
    OR           desplazar e ir al estado 127
    DESIGUALDAD  desplazar e ir al estado 128


estado 87

   68 sentenciaAsignacionAuxiliar: MAS_IGUAL .
   77 identificadorA: IDENTIFICADOR MAS_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    DECIMAL         [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    HEXA            [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    OCTAL           [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    NUM_R           [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    IDENTIFICADOR   [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    CHAR            [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]
    LITERAL_CADENA  [reduce usando la regla 68 (sentenciaAsignacionAuxiliar)]

    exp   ir al estado 129
    expC  ir al estado 74


estado 88

   69 sentenciaAsignacionAuxiliar: MENOS_IGUAL .
   78 identificadorA: IDENTIFICADOR MENOS_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    DECIMAL         [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    HEXA            [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    OCTAL           [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    NUM_R           [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    IDENTIFICADOR   [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    CHAR            [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]
    LITERAL_CADENA  [reduce usando la regla 69 (sentenciaAsignacionAuxiliar)]

    exp   ir al estado 130
    expC  ir al estado 74


estado 89

   70 sentenciaAsignacionAuxiliar: POR_IGUAL .
   79 identificadorA: IDENTIFICADOR POR_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    DECIMAL         [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    HEXA            [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    OCTAL           [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    NUM_R           [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    IDENTIFICADOR   [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    CHAR            [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]
    LITERAL_CADENA  [reduce usando la regla 70 (sentenciaAsignacionAuxiliar)]

    exp   ir al estado 131
    expC  ir al estado 74


estado 90

   71 sentenciaAsignacionAuxiliar: DIVIDIDO_IGUAL .
   80 identificadorA: IDENTIFICADOR DIVIDIDO_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    DECIMAL         [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    HEXA            [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    OCTAL           [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    NUM_R           [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    IDENTIFICADOR   [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    CHAR            [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]
    LITERAL_CADENA  [reduce usando la regla 71 (sentenciaAsignacionAuxiliar)]

    exp   ir al estado 132
    expC  ir al estado 74


estado 91

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' . listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' ';'
   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR '(' . listaParametrosPrototipo ')' ';'

    TIPO_DATO  desplazar e ir al estado 133

    ')'       reduce usando la regla 81 (listaParametrosPrototipo)
    ')'       [reduce usando la regla 85 (listaParametrosFuncion)]
    $default  reduce usando la regla 81 (listaParametrosPrototipo)

    listaParametrosPrototipo  ir al estado 134
    listaParametrosFuncion    ir al estado 135


estado 92

   56 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' . expC ']' ';'
   57                     | TIPO_DATO IDENTIFICADOR '[' . expC ']' '=' '{' auxi '}' ';'

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 136


estado 93

   67 sentenciaAsignacionAuxiliar: '=' .
   76 identificadorA: IDENTIFICADOR '=' . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    DECIMAL         [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    HEXA            [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    OCTAL           [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    NUM_R           [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    IDENTIFICADOR   [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    CHAR            [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]
    LITERAL_CADENA  [reduce usando la regla 67 (sentenciaAsignacionAuxiliar)]

    exp   ir al estado 137
    expC  ir al estado 74


estado 94

   54 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR opcional1 . ';'

    ';'  desplazar e ir al estado 138


estado 95

   63 opcional1: sentenciaAsignacionAuxiliar . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 139
    expC  ir al estado 74


estado 96

   58 sentenciaDeclaracion: TIPO_DATO '*' IDENTIFICADOR . ';'

    ';'  desplazar e ir al estado 140


estado 97

   55 sentenciaDeclaracion: TIPO_DATO listaIdentificadores ';' .

    $default  reduce usando la regla 55 (sentenciaDeclaracion)


estado 98

   74 listaIdentificadores: listaIdentificadores ',' . identificadorA

    IDENTIFICADOR  desplazar e ir al estado 141

    identificadorA  ir al estado 142


estado 99

   32 sentenciaDoWhile: DO saltoOpcional '{' . listadoDeSentencias '}' WHILE '(' exp ')' ';'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 147
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 100

   45 sentenciaWhile: WHILE '(' exp . ')' saltoOpcional '{' listadoDeSentencias '}'

    ')'  desplazar e ir al estado 157


estado 101

   53 listadoDeSentenciasDeDeclaracion: sentenciaDeclaracion ';' listadoDeSentenciasDeDeclaracion .

    $default  reduce usando la regla 53 (listadoDeSentenciasDeDeclaracion)


estado 102

   66 sentenciaAsignacion: parametro sentenciaAsignacionAuxiliar exp . ';'

    ';'  desplazar e ir al estado 158


estado 103

   59 sentenciaDeclaracion: error saltoOpcional .

    $default  reduce usando la regla 59 (sentenciaDeclaracion)


estado 104

   54 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR . opcional1 ';'
   56                     | TIPO_DATO IDENTIFICADOR . '[' expC ']' ';'
   57                     | TIPO_DATO IDENTIFICADOR . '[' expC ']' '=' '{' auxi '}' ';'
   75 identificadorA: IDENTIFICADOR .
   76               | IDENTIFICADOR . '=' exp
   77               | IDENTIFICADOR . MAS_IGUAL exp
   78               | IDENTIFICADOR . MENOS_IGUAL exp
   79               | IDENTIFICADOR . POR_IGUAL exp
   80               | IDENTIFICADOR . DIVIDIDO_IGUAL exp

    MAS_IGUAL       desplazar e ir al estado 87
    MENOS_IGUAL     desplazar e ir al estado 88
    POR_IGUAL       desplazar e ir al estado 89
    DIVIDIDO_IGUAL  desplazar e ir al estado 90
    '['             desplazar e ir al estado 92
    '='             desplazar e ir al estado 93

    ';'       reduce usando la regla 62 (opcional1)
    ';'       [reduce usando la regla 75 (identificadorA)]
    ','       reduce usando la regla 75 (identificadorA)
    $default  reduce usando la regla 62 (opcional1)

    opcional1                    ir al estado 94
    sentenciaAsignacionAuxiliar  ir al estado 95


estado 105

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC . ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'
  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    ';'          desplazar e ir al estado 159
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118


estado 106

   41 sentenciaIfElse: IF '(' exp ')' . saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 160


estado 107

  119 expC: expC MAYOR_IGUAL . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 161


estado 108

  120 expC: expC MENOR_IGUAL . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 162


estado 109

  118 expC: expC IGUALDAD . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 163


estado 110

  122 expC: expC AND . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 164


estado 111

  123 expC: expC OR . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 165


estado 112

  121 expC: expC DESIGUALDAD . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 166


estado 113

  128 expC: expC '*' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 167


estado 114

  114 expC: expC '+' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 168


estado 115

  115 expC: expC '-' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 169


estado 116

  116 expC: expC '>' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 170


estado 117

  117 expC: expC '<' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 171


estado 118

  129 expC: expC '/' . expC

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    expC  ir al estado 172


estado 119

   46 sentenciaSwitch: SWITCH '(' exp ')' . saltoOpcional '{' sentenciaCase '}'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 173


estado 120

   19 invocacionFuncion: IDENTIFICADOR '(' listaParametrosInvocacion ')' . ';'

    ';'  desplazar e ir al estado 174


estado 121

   90 listaParametrosInvocacionAuxiliar: ',' . noTerminal listaParametrosInvocacionAuxiliar

    DECIMAL        desplazar e ir al estado 78
    HEXA           desplazar e ir al estado 79
    OCTAL          desplazar e ir al estado 80
    NUM_R          desplazar e ir al estado 81
    IDENTIFICADOR  desplazar e ir al estado 82
    CHAR           desplazar e ir al estado 83

    noTerminal       ir al estado 175
    noTerminalFinal  ir al estado 86


estado 122

   89 listaParametrosInvocacion: noTerminal listaParametrosInvocacionAuxiliar .

    $default  reduce usando la regla 89 (listaParametrosInvocacion)


estado 123

   99 noTerminal: noTerminalFinal MAYOR_IGUAL . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 182


estado 124

  100 noTerminal: noTerminalFinal MENOR_IGUAL . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 183


estado 125

   98 noTerminal: noTerminalFinal IGUALDAD . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 184


estado 126

  102 noTerminal: noTerminalFinal AND . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 185


estado 127

  103 noTerminal: noTerminalFinal OR . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 186


estado 128

  101 noTerminal: noTerminalFinal DESIGUALDAD . noTerminalFinal

    DECIMAL        desplazar e ir al estado 176
    HEXA           desplazar e ir al estado 177
    OCTAL          desplazar e ir al estado 178
    NUM_R          desplazar e ir al estado 179
    IDENTIFICADOR  desplazar e ir al estado 180
    CHAR           desplazar e ir al estado 181

    noTerminalFinal  ir al estado 187


estado 129

   77 identificadorA: IDENTIFICADOR MAS_IGUAL exp .

    $default  reduce usando la regla 77 (identificadorA)


estado 130

   78 identificadorA: IDENTIFICADOR MENOS_IGUAL exp .

    $default  reduce usando la regla 78 (identificadorA)


estado 131

   79 identificadorA: IDENTIFICADOR POR_IGUAL exp .

    $default  reduce usando la regla 79 (identificadorA)


estado 132

   80 identificadorA: IDENTIFICADOR DIVIDIDO_IGUAL exp .

    $default  reduce usando la regla 80 (identificadorA)


estado 133

   82 listaParametrosPrototipo: TIPO_DATO .
   83                         | TIPO_DATO . ',' listaParametrosPrototipo
   86 listaParametrosFuncion: TIPO_DATO . IDENTIFICADOR
   87                       | TIPO_DATO . IDENTIFICADOR ',' listaParametrosFuncion

    IDENTIFICADOR  desplazar e ir al estado 188
    ','            desplazar e ir al estado 189

    $default  reduce usando la regla 82 (listaParametrosPrototipo)


estado 134

   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosPrototipo . ')' ';'

    ')'  desplazar e ir al estado 190


estado 135

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion . ')' saltoOpcional '{' listadoDeSentencias '}' ';'
   84 listaParametrosPrototipo: listaParametrosFuncion .

    ')'  desplazar e ir al estado 191

    ')'  [reduce usando la regla 84 (listaParametrosPrototipo)]


estado 136

   56 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC . ']' ';'
   57                     | TIPO_DATO IDENTIFICADOR '[' expC . ']' '=' '{' auxi '}' ';'
  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    ']'          desplazar e ir al estado 192
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118


estado 137

   76 identificadorA: IDENTIFICADOR '=' exp .

    $default  reduce usando la regla 76 (identificadorA)


estado 138

   54 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR opcional1 ';' .

    $default  reduce usando la regla 54 (sentenciaDeclaracion)


estado 139

   63 opcional1: sentenciaAsignacionAuxiliar exp .

    $default  reduce usando la regla 63 (opcional1)


estado 140

   58 sentenciaDeclaracion: TIPO_DATO '*' IDENTIFICADOR ';' .

    $default  reduce usando la regla 58 (sentenciaDeclaracion)


estado 141

   75 identificadorA: IDENTIFICADOR .
   76               | IDENTIFICADOR . '=' exp
   77               | IDENTIFICADOR . MAS_IGUAL exp
   78               | IDENTIFICADOR . MENOS_IGUAL exp
   79               | IDENTIFICADOR . POR_IGUAL exp
   80               | IDENTIFICADOR . DIVIDIDO_IGUAL exp

    MAS_IGUAL       desplazar e ir al estado 193
    MENOS_IGUAL     desplazar e ir al estado 194
    POR_IGUAL       desplazar e ir al estado 195
    DIVIDIDO_IGUAL  desplazar e ir al estado 196
    '='             desplazar e ir al estado 197

    $default  reduce usando la regla 75 (identificadorA)


estado 142

   74 listaIdentificadores: listaIdentificadores ',' identificadorA .

    $default  reduce usando la regla 74 (listaIdentificadores)


estado 143

   42 sentenciaIfElse: error . saltoOpcional
   59 sentenciaDeclaracion: error . saltoOpcional

    '\n'  desplazar e ir al estado 27

    '\n'      [reduce usando la regla 17 (saltoOpcional)]
    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 198


estado 144

   50 sentenciaReturn: RETURN . exp ';'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 199
    expC  ir al estado 74


estado 145

   31 listadoDeSentencias: '\n' . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 200
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 146

   29 listadoDeSentencias: invocacionFuncion . saltoOpcional

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 201


estado 147

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias . '}' WHILE '(' exp ')' ';'

    '}'  desplazar e ir al estado 202


estado 148

   22 listadoDeSentencias: sentenciaDoWhile . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 203
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 149

   23 listadoDeSentencias: sentenciaFor . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 204
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 150

   30 listadoDeSentencias: incrementoDecremento . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 205
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 151

   25 listadoDeSentencias: sentenciaIfElse . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 206
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 152

   24 listadoDeSentencias: sentenciaWhile . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 207
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 153

   21 listadoDeSentencias: sentenciaSwitch . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 208
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 154

   27 listadoDeSentencias: sentenciaReturn . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 209
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 155

   28 listadoDeSentencias: listadoDeSentenciasDeDeclaracion . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 210
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 156

   26 listadoDeSentencias: sentenciaAsignacion . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 211
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 157

   45 sentenciaWhile: WHILE '(' exp ')' . saltoOpcional '{' listadoDeSentencias '}'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 212


estado 158

   66 sentenciaAsignacion: parametro sentenciaAsignacionAuxiliar exp ';' .

    $default  reduce usando la regla 66 (sentenciaAsignacion)


estado 159

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' . incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}'

    IDENTIFICADOR  desplazar e ir al estado 213

    incrementoParaFor  ir al estado 214


estado 160

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional . '{' listadoDeSentencias '}' $@1 sentenciaElse

    '{'  desplazar e ir al estado 215


estado 161

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  119     | expC MAYOR_IGUAL expC .
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 119 (expC)]
    MENOR_IGUAL  [reduce usando la regla 119 (expC)]
    IGUALDAD     [reduce usando la regla 119 (expC)]
    AND          [reduce usando la regla 119 (expC)]
    OR           [reduce usando la regla 119 (expC)]
    DESIGUALDAD  [reduce usando la regla 119 (expC)]
    '*'          [reduce usando la regla 119 (expC)]
    '+'          [reduce usando la regla 119 (expC)]
    '-'          [reduce usando la regla 119 (expC)]
    '>'          [reduce usando la regla 119 (expC)]
    '<'          [reduce usando la regla 119 (expC)]
    '/'          [reduce usando la regla 119 (expC)]
    $default     reduce usando la regla 119 (expC)


estado 162

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  120     | expC MENOR_IGUAL expC .
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 120 (expC)]
    MENOR_IGUAL  [reduce usando la regla 120 (expC)]
    IGUALDAD     [reduce usando la regla 120 (expC)]
    AND          [reduce usando la regla 120 (expC)]
    OR           [reduce usando la regla 120 (expC)]
    DESIGUALDAD  [reduce usando la regla 120 (expC)]
    '*'          [reduce usando la regla 120 (expC)]
    '+'          [reduce usando la regla 120 (expC)]
    '-'          [reduce usando la regla 120 (expC)]
    '>'          [reduce usando la regla 120 (expC)]
    '<'          [reduce usando la regla 120 (expC)]
    '/'          [reduce usando la regla 120 (expC)]
    $default     reduce usando la regla 120 (expC)


estado 163

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  118     | expC IGUALDAD expC .
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 118 (expC)]
    MENOR_IGUAL  [reduce usando la regla 118 (expC)]
    IGUALDAD     [reduce usando la regla 118 (expC)]
    AND          [reduce usando la regla 118 (expC)]
    OR           [reduce usando la regla 118 (expC)]
    DESIGUALDAD  [reduce usando la regla 118 (expC)]
    '*'          [reduce usando la regla 118 (expC)]
    '+'          [reduce usando la regla 118 (expC)]
    '-'          [reduce usando la regla 118 (expC)]
    '>'          [reduce usando la regla 118 (expC)]
    '<'          [reduce usando la regla 118 (expC)]
    '/'          [reduce usando la regla 118 (expC)]
    $default     reduce usando la regla 118 (expC)


estado 164

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  122     | expC AND expC .
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 122 (expC)]
    MENOR_IGUAL  [reduce usando la regla 122 (expC)]
    IGUALDAD     [reduce usando la regla 122 (expC)]
    AND          [reduce usando la regla 122 (expC)]
    OR           [reduce usando la regla 122 (expC)]
    DESIGUALDAD  [reduce usando la regla 122 (expC)]
    '*'          [reduce usando la regla 122 (expC)]
    '+'          [reduce usando la regla 122 (expC)]
    '-'          [reduce usando la regla 122 (expC)]
    '>'          [reduce usando la regla 122 (expC)]
    '<'          [reduce usando la regla 122 (expC)]
    '/'          [reduce usando la regla 122 (expC)]
    $default     reduce usando la regla 122 (expC)


estado 165

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  123     | expC OR expC .
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 123 (expC)]
    MENOR_IGUAL  [reduce usando la regla 123 (expC)]
    IGUALDAD     [reduce usando la regla 123 (expC)]
    AND          [reduce usando la regla 123 (expC)]
    OR           [reduce usando la regla 123 (expC)]
    DESIGUALDAD  [reduce usando la regla 123 (expC)]
    '*'          [reduce usando la regla 123 (expC)]
    '+'          [reduce usando la regla 123 (expC)]
    '-'          [reduce usando la regla 123 (expC)]
    '>'          [reduce usando la regla 123 (expC)]
    '<'          [reduce usando la regla 123 (expC)]
    '/'          [reduce usando la regla 123 (expC)]
    $default     reduce usando la regla 123 (expC)


estado 166

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  121     | expC DESIGUALDAD expC .
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 121 (expC)]
    MENOR_IGUAL  [reduce usando la regla 121 (expC)]
    IGUALDAD     [reduce usando la regla 121 (expC)]
    AND          [reduce usando la regla 121 (expC)]
    OR           [reduce usando la regla 121 (expC)]
    DESIGUALDAD  [reduce usando la regla 121 (expC)]
    '*'          [reduce usando la regla 121 (expC)]
    '+'          [reduce usando la regla 121 (expC)]
    '-'          [reduce usando la regla 121 (expC)]
    '>'          [reduce usando la regla 121 (expC)]
    '<'          [reduce usando la regla 121 (expC)]
    '/'          [reduce usando la regla 121 (expC)]
    $default     reduce usando la regla 121 (expC)


estado 167

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  128     | expC '*' expC .
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 128 (expC)]
    MENOR_IGUAL  [reduce usando la regla 128 (expC)]
    IGUALDAD     [reduce usando la regla 128 (expC)]
    AND          [reduce usando la regla 128 (expC)]
    OR           [reduce usando la regla 128 (expC)]
    DESIGUALDAD  [reduce usando la regla 128 (expC)]
    '*'          [reduce usando la regla 128 (expC)]
    '+'          [reduce usando la regla 128 (expC)]
    '-'          [reduce usando la regla 128 (expC)]
    '>'          [reduce usando la regla 128 (expC)]
    '<'          [reduce usando la regla 128 (expC)]
    '/'          [reduce usando la regla 128 (expC)]
    $default     reduce usando la regla 128 (expC)


estado 168

  114 expC: expC . '+' expC
  114     | expC '+' expC .
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 114 (expC)]
    MENOR_IGUAL  [reduce usando la regla 114 (expC)]
    IGUALDAD     [reduce usando la regla 114 (expC)]
    AND          [reduce usando la regla 114 (expC)]
    OR           [reduce usando la regla 114 (expC)]
    DESIGUALDAD  [reduce usando la regla 114 (expC)]
    '*'          [reduce usando la regla 114 (expC)]
    '+'          [reduce usando la regla 114 (expC)]
    '-'          [reduce usando la regla 114 (expC)]
    '>'          [reduce usando la regla 114 (expC)]
    '<'          [reduce usando la regla 114 (expC)]
    '/'          [reduce usando la regla 114 (expC)]
    $default     reduce usando la regla 114 (expC)


estado 169

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  115     | expC '-' expC .
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 115 (expC)]
    MENOR_IGUAL  [reduce usando la regla 115 (expC)]
    IGUALDAD     [reduce usando la regla 115 (expC)]
    AND          [reduce usando la regla 115 (expC)]
    OR           [reduce usando la regla 115 (expC)]
    DESIGUALDAD  [reduce usando la regla 115 (expC)]
    '*'          [reduce usando la regla 115 (expC)]
    '+'          [reduce usando la regla 115 (expC)]
    '-'          [reduce usando la regla 115 (expC)]
    '>'          [reduce usando la regla 115 (expC)]
    '<'          [reduce usando la regla 115 (expC)]
    '/'          [reduce usando la regla 115 (expC)]
    $default     reduce usando la regla 115 (expC)


estado 170

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  116     | expC '>' expC .
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 116 (expC)]
    MENOR_IGUAL  [reduce usando la regla 116 (expC)]
    IGUALDAD     [reduce usando la regla 116 (expC)]
    AND          [reduce usando la regla 116 (expC)]
    OR           [reduce usando la regla 116 (expC)]
    DESIGUALDAD  [reduce usando la regla 116 (expC)]
    '*'          [reduce usando la regla 116 (expC)]
    '+'          [reduce usando la regla 116 (expC)]
    '-'          [reduce usando la regla 116 (expC)]
    '>'          [reduce usando la regla 116 (expC)]
    '<'          [reduce usando la regla 116 (expC)]
    '/'          [reduce usando la regla 116 (expC)]
    $default     reduce usando la regla 116 (expC)


estado 171

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  117     | expC '<' expC .
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 117 (expC)]
    MENOR_IGUAL  [reduce usando la regla 117 (expC)]
    IGUALDAD     [reduce usando la regla 117 (expC)]
    AND          [reduce usando la regla 117 (expC)]
    OR           [reduce usando la regla 117 (expC)]
    DESIGUALDAD  [reduce usando la regla 117 (expC)]
    '*'          [reduce usando la regla 117 (expC)]
    '+'          [reduce usando la regla 117 (expC)]
    '-'          [reduce usando la regla 117 (expC)]
    '>'          [reduce usando la regla 117 (expC)]
    '<'          [reduce usando la regla 117 (expC)]
    '/'          [reduce usando la regla 117 (expC)]
    $default     reduce usando la regla 117 (expC)


estado 172

  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC
  129     | expC '/' expC .

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    MAYOR_IGUAL  [reduce usando la regla 129 (expC)]
    MENOR_IGUAL  [reduce usando la regla 129 (expC)]
    IGUALDAD     [reduce usando la regla 129 (expC)]
    AND          [reduce usando la regla 129 (expC)]
    OR           [reduce usando la regla 129 (expC)]
    DESIGUALDAD  [reduce usando la regla 129 (expC)]
    '*'          [reduce usando la regla 129 (expC)]
    '+'          [reduce usando la regla 129 (expC)]
    '-'          [reduce usando la regla 129 (expC)]
    '>'          [reduce usando la regla 129 (expC)]
    '<'          [reduce usando la regla 129 (expC)]
    '/'          [reduce usando la regla 129 (expC)]
    $default     reduce usando la regla 129 (expC)


estado 173

   46 sentenciaSwitch: SWITCH '(' exp ')' saltoOpcional . '{' sentenciaCase '}'

    '{'  desplazar e ir al estado 216


estado 174

   19 invocacionFuncion: IDENTIFICADOR '(' listaParametrosInvocacion ')' ';' .

    $default  reduce usando la regla 19 (invocacionFuncion)


estado 175

   90 listaParametrosInvocacionAuxiliar: ',' noTerminal . listaParametrosInvocacionAuxiliar

    ','  desplazar e ir al estado 121

    $default  reduce usando la regla 91 (listaParametrosInvocacionAuxiliar)

    listaParametrosInvocacionAuxiliar  ir al estado 217


estado 176

  106 noTerminalFinal: DECIMAL .

    $default  reduce usando la regla 106 (noTerminalFinal)


estado 177

  107 noTerminalFinal: HEXA .

    $default  reduce usando la regla 107 (noTerminalFinal)


estado 178

  108 noTerminalFinal: OCTAL .

    $default  reduce usando la regla 108 (noTerminalFinal)


estado 179

  109 noTerminalFinal: NUM_R .

    $default  reduce usando la regla 109 (noTerminalFinal)


estado 180

  104 noTerminalFinal: IDENTIFICADOR .

    $default  reduce usando la regla 104 (noTerminalFinal)


estado 181

  105 noTerminalFinal: CHAR .

    $default  reduce usando la regla 105 (noTerminalFinal)


estado 182

   99 noTerminal: noTerminalFinal MAYOR_IGUAL noTerminalFinal .

    $default  reduce usando la regla 99 (noTerminal)


estado 183

  100 noTerminal: noTerminalFinal MENOR_IGUAL noTerminalFinal .

    $default  reduce usando la regla 100 (noTerminal)


estado 184

   98 noTerminal: noTerminalFinal IGUALDAD noTerminalFinal .

    $default  reduce usando la regla 98 (noTerminal)


estado 185

  102 noTerminal: noTerminalFinal AND noTerminalFinal .

    $default  reduce usando la regla 102 (noTerminal)


estado 186

  103 noTerminal: noTerminalFinal OR noTerminalFinal .

    $default  reduce usando la regla 103 (noTerminal)


estado 187

  101 noTerminal: noTerminalFinal DESIGUALDAD noTerminalFinal .

    $default  reduce usando la regla 101 (noTerminal)


estado 188

   86 listaParametrosFuncion: TIPO_DATO IDENTIFICADOR .
   87                       | TIPO_DATO IDENTIFICADOR . ',' listaParametrosFuncion

    ','  desplazar e ir al estado 218

    $default  reduce usando la regla 86 (listaParametrosFuncion)


estado 189

   83 listaParametrosPrototipo: TIPO_DATO ',' . listaParametrosPrototipo

    TIPO_DATO  desplazar e ir al estado 133

    ')'       reduce usando la regla 81 (listaParametrosPrototipo)
    ')'       [reduce usando la regla 85 (listaParametrosFuncion)]
    $default  reduce usando la regla 81 (listaParametrosPrototipo)

    listaParametrosPrototipo  ir al estado 219
    listaParametrosFuncion    ir al estado 220


estado 190

   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosPrototipo ')' . ';'

    ';'  desplazar e ir al estado 221


estado 191

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' . saltoOpcional '{' listadoDeSentencias '}' ';'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 222


estado 192

   56 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' . ';'
   57                     | TIPO_DATO IDENTIFICADOR '[' expC ']' . '=' '{' auxi '}' ';'

    ';'  desplazar e ir al estado 223
    '='  desplazar e ir al estado 224


estado 193

   77 identificadorA: IDENTIFICADOR MAS_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 129
    expC  ir al estado 74


estado 194

   78 identificadorA: IDENTIFICADOR MENOS_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 130
    expC  ir al estado 74


estado 195

   79 identificadorA: IDENTIFICADOR POR_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 131
    expC  ir al estado 74


estado 196

   80 identificadorA: IDENTIFICADOR DIVIDIDO_IGUAL . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 132
    expC  ir al estado 74


estado 197

   76 identificadorA: IDENTIFICADOR '=' . exp

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 137
    expC  ir al estado 74


estado 198

   42 sentenciaIfElse: error saltoOpcional .
   59 sentenciaDeclaracion: error saltoOpcional .

    error          reduce usando la regla 42 (sentenciaIfElse)
    error          [reduce usando la regla 59 (sentenciaDeclaracion)]
    FOR            reduce usando la regla 42 (sentenciaIfElse)
    FOR            [reduce usando la regla 59 (sentenciaDeclaracion)]
    IF             reduce usando la regla 42 (sentenciaIfElse)
    IF             [reduce usando la regla 59 (sentenciaDeclaracion)]
    RETURN         reduce usando la regla 42 (sentenciaIfElse)
    RETURN         [reduce usando la regla 59 (sentenciaDeclaracion)]
    SWITCH         reduce usando la regla 42 (sentenciaIfElse)
    SWITCH         [reduce usando la regla 59 (sentenciaDeclaracion)]
    IDENTIFICADOR  reduce usando la regla 42 (sentenciaIfElse)
    IDENTIFICADOR  [reduce usando la regla 59 (sentenciaDeclaracion)]
    TIPO_DATO      reduce usando la regla 42 (sentenciaIfElse)
    TIPO_DATO      [reduce usando la regla 59 (sentenciaDeclaracion)]
    DO             reduce usando la regla 42 (sentenciaIfElse)
    DO             [reduce usando la regla 59 (sentenciaDeclaracion)]
    WHILE          reduce usando la regla 42 (sentenciaIfElse)
    WHILE          [reduce usando la regla 59 (sentenciaDeclaracion)]
    BREAK          reduce usando la regla 42 (sentenciaIfElse)
    BREAK          [reduce usando la regla 59 (sentenciaDeclaracion)]
    DEFAULT        reduce usando la regla 42 (sentenciaIfElse)
    DEFAULT        [reduce usando la regla 59 (sentenciaDeclaracion)]
    '\n'           reduce usando la regla 42 (sentenciaIfElse)
    '\n'           [reduce usando la regla 59 (sentenciaDeclaracion)]
    ';'            reduce usando la regla 59 (sentenciaDeclaracion)
    '}'            reduce usando la regla 42 (sentenciaIfElse)
    '}'            [reduce usando la regla 59 (sentenciaDeclaracion)]
    $default       reduce usando la regla 42 (sentenciaIfElse)


estado 199

   50 sentenciaReturn: RETURN exp . ';'

    ';'  desplazar e ir al estado 225


estado 200

   31 listadoDeSentencias: '\n' listadoDeSentencias .

    $default  reduce usando la regla 31 (listadoDeSentencias)


estado 201

   29 listadoDeSentencias: invocacionFuncion saltoOpcional .

    $default  reduce usando la regla 29 (listadoDeSentencias)


estado 202

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' . WHILE '(' exp ')' ';'

    WHILE  desplazar e ir al estado 226


estado 203

   22 listadoDeSentencias: sentenciaDoWhile listadoDeSentencias .

    $default  reduce usando la regla 22 (listadoDeSentencias)


estado 204

   23 listadoDeSentencias: sentenciaFor listadoDeSentencias .

    $default  reduce usando la regla 23 (listadoDeSentencias)


estado 205

   30 listadoDeSentencias: incrementoDecremento listadoDeSentencias .

    $default  reduce usando la regla 30 (listadoDeSentencias)


estado 206

   25 listadoDeSentencias: sentenciaIfElse listadoDeSentencias .

    $default  reduce usando la regla 25 (listadoDeSentencias)


estado 207

   24 listadoDeSentencias: sentenciaWhile listadoDeSentencias .

    $default  reduce usando la regla 24 (listadoDeSentencias)


estado 208

   21 listadoDeSentencias: sentenciaSwitch listadoDeSentencias .

    $default  reduce usando la regla 21 (listadoDeSentencias)


estado 209

   27 listadoDeSentencias: sentenciaReturn listadoDeSentencias .

    $default  reduce usando la regla 27 (listadoDeSentencias)


estado 210

   28 listadoDeSentencias: listadoDeSentenciasDeDeclaracion listadoDeSentencias .

    $default  reduce usando la regla 28 (listadoDeSentencias)


estado 211

   26 listadoDeSentencias: sentenciaAsignacion listadoDeSentencias .

    $default  reduce usando la regla 26 (listadoDeSentencias)


estado 212

   45 sentenciaWhile: WHILE '(' exp ')' saltoOpcional . '{' listadoDeSentencias '}'

    '{'  desplazar e ir al estado 227


estado 213

   36 incrementoParaFor: IDENTIFICADOR . incrementoParaForAuxiliar

    MAS_MAS  desplazar e ir al estado 228

    incrementoParaForAuxiliar  ir al estado 229


estado 214

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor . ')' saltoOpcional '{' listadoDeSentencias '}'

    ')'  desplazar e ir al estado 230


estado 215

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' . listadoDeSentencias '}' $@1 sentenciaElse

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 231
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 216

   46 sentenciaSwitch: SWITCH '(' exp ')' saltoOpcional '{' . sentenciaCase '}'

    CASE  desplazar e ir al estado 232

    $default  reduce usando la regla 47 (sentenciaCase)

    sentenciaCase  ir al estado 233


estado 217

   90 listaParametrosInvocacionAuxiliar: ',' noTerminal listaParametrosInvocacionAuxiliar .

    $default  reduce usando la regla 90 (listaParametrosInvocacionAuxiliar)


estado 218

   87 listaParametrosFuncion: TIPO_DATO IDENTIFICADOR ',' . listaParametrosFuncion

    TIPO_DATO  desplazar e ir al estado 234

    $default  reduce usando la regla 85 (listaParametrosFuncion)

    listaParametrosFuncion  ir al estado 235


estado 219

   83 listaParametrosPrototipo: TIPO_DATO ',' listaParametrosPrototipo .

    $default  reduce usando la regla 83 (listaParametrosPrototipo)


estado 220

   84 listaParametrosPrototipo: listaParametrosFuncion .

    $default  reduce usando la regla 84 (listaParametrosPrototipo)


estado 221

   61 prototipoFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosPrototipo ')' ';' .

    $default  reduce usando la regla 61 (prototipoFuncion)


estado 222

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional . '{' listadoDeSentencias '}' ';'

    '{'  desplazar e ir al estado 236


estado 223

   56 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' ';' .

    $default  reduce usando la regla 56 (sentenciaDeclaracion)


estado 224

   57 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' '=' . '{' auxi '}' ';'

    '{'  desplazar e ir al estado 237


estado 225

   50 sentenciaReturn: RETURN exp ';' .

    $default  reduce usando la regla 50 (sentenciaReturn)


estado 226

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE . '(' exp ')' ';'

    '('  desplazar e ir al estado 238


estado 227

   45 sentenciaWhile: WHILE '(' exp ')' saltoOpcional '{' . listadoDeSentencias '}'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 239
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 228

   37 incrementoParaForAuxiliar: MAS_MAS . MENOS_MENOS

    MENOS_MENOS  desplazar e ir al estado 240


estado 229

   36 incrementoParaFor: IDENTIFICADOR incrementoParaForAuxiliar .

    $default  reduce usando la regla 36 (incrementoParaFor)


estado 230

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' . saltoOpcional '{' listadoDeSentencias '}'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 241


estado 231

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' listadoDeSentencias . '}' $@1 sentenciaElse

    '}'  desplazar e ir al estado 242


estado 232

   48 sentenciaCase: CASE . exp ':' listadoDeSentencias BREAK ';'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 243
    expC  ir al estado 74


estado 233

   46 sentenciaSwitch: SWITCH '(' exp ')' saltoOpcional '{' sentenciaCase . '}'
   49 sentenciaCase: sentenciaCase . DEFAULT ':' listadoDeSentencias

    DEFAULT  desplazar e ir al estado 244
    '}'      desplazar e ir al estado 245


estado 234

   86 listaParametrosFuncion: TIPO_DATO . IDENTIFICADOR
   87                       | TIPO_DATO . IDENTIFICADOR ',' listaParametrosFuncion

    IDENTIFICADOR  desplazar e ir al estado 188


estado 235

   87 listaParametrosFuncion: TIPO_DATO IDENTIFICADOR ',' listaParametrosFuncion .

    $default  reduce usando la regla 87 (listaParametrosFuncion)


estado 236

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' . listadoDeSentencias '}' ';'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 246
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 237

   57 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' '=' '{' . auxi '}' ';'

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    auxi  ir al estado 247
    expC  ir al estado 248


estado 238

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE '(' . exp ')' ';'

    DECIMAL         desplazar e ir al estado 66
    HEXA            desplazar e ir al estado 67
    OCTAL           desplazar e ir al estado 68
    NUM_R           desplazar e ir al estado 69
    IDENTIFICADOR   desplazar e ir al estado 70
    CHAR            desplazar e ir al estado 71
    LITERAL_CADENA  desplazar e ir al estado 72

    exp   ir al estado 249
    expC  ir al estado 74


estado 239

   45 sentenciaWhile: WHILE '(' exp ')' saltoOpcional '{' listadoDeSentencias . '}'

    '}'  desplazar e ir al estado 250


estado 240

   37 incrementoParaForAuxiliar: MAS_MAS MENOS_MENOS .

    $default  reduce usando la regla 37 (incrementoParaForAuxiliar)


estado 241

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional . '{' listadoDeSentencias '}'

    '{'  desplazar e ir al estado 251


estado 242

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' . $@1 sentenciaElse

    $default  reduce usando la regla 40 ($@1)

    $@1  ir al estado 252


estado 243

   48 sentenciaCase: CASE exp . ':' listadoDeSentencias BREAK ';'

    ':'  desplazar e ir al estado 253


estado 244

   49 sentenciaCase: sentenciaCase DEFAULT . ':' listadoDeSentencias

    ':'  desplazar e ir al estado 254


estado 245

   46 sentenciaSwitch: SWITCH '(' exp ')' saltoOpcional '{' sentenciaCase '}' .

    $default  reduce usando la regla 46 (sentenciaSwitch)


estado 246

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias . '}' ';'

    '}'  desplazar e ir al estado 255


estado 247

   57 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' '=' '{' auxi . '}' ';'

    '}'  desplazar e ir al estado 256


estado 248

   64 auxi: expC . ',' auxi
   65     | expC .
  114 expC: expC . '+' expC
  115     | expC . '-' expC
  116     | expC . '>' expC
  117     | expC . '<' expC
  118     | expC . IGUALDAD expC
  119     | expC . MAYOR_IGUAL expC
  120     | expC . MENOR_IGUAL expC
  121     | expC . DESIGUALDAD expC
  122     | expC . AND expC
  123     | expC . OR expC
  128     | expC . '*' expC
  129     | expC . '/' expC

    MAYOR_IGUAL  desplazar e ir al estado 107
    MENOR_IGUAL  desplazar e ir al estado 108
    IGUALDAD     desplazar e ir al estado 109
    AND          desplazar e ir al estado 110
    OR           desplazar e ir al estado 111
    DESIGUALDAD  desplazar e ir al estado 112
    '*'          desplazar e ir al estado 113
    ','          desplazar e ir al estado 257
    '+'          desplazar e ir al estado 114
    '-'          desplazar e ir al estado 115
    '>'          desplazar e ir al estado 116
    '<'          desplazar e ir al estado 117
    '/'          desplazar e ir al estado 118

    $default  reduce usando la regla 65 (auxi)


estado 249

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE '(' exp . ')' ';'

    ')'  desplazar e ir al estado 258


estado 250

   45 sentenciaWhile: WHILE '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' .

    $default  reduce usando la regla 45 (sentenciaWhile)


estado 251

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' . listadoDeSentencias '}'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 259
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 252

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' $@1 . sentenciaElse

    ELSE  desplazar e ir al estado 260

    $default  reduce usando la regla 43 (sentenciaElse)

    sentenciaElse  ir al estado 261


estado 253

   48 sentenciaCase: CASE exp ':' . listadoDeSentencias BREAK ';'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    BREAK          reduce usando la regla 20 (listadoDeSentencias)
    BREAK          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 262
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 254

   49 sentenciaCase: sentenciaCase DEFAULT ':' . listadoDeSentencias

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DEFAULT        reduce usando la regla 20 (listadoDeSentencias)
    DEFAULT        [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 263
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 255

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' . ';'

    ';'  desplazar e ir al estado 264


estado 256

   57 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' '=' '{' auxi '}' . ';'

    ';'  desplazar e ir al estado 265


estado 257

   64 auxi: expC ',' . auxi

    DECIMAL        desplazar e ir al estado 66
    HEXA           desplazar e ir al estado 67
    OCTAL          desplazar e ir al estado 68
    NUM_R          desplazar e ir al estado 69
    IDENTIFICADOR  desplazar e ir al estado 70
    CHAR           desplazar e ir al estado 71

    auxi  ir al estado 266
    expC  ir al estado 248


estado 258

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE '(' exp ')' . ';'

    ';'  desplazar e ir al estado 267


estado 259

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias . '}'

    '}'  desplazar e ir al estado 268


estado 260

   44 sentenciaElse: ELSE . saltoOpcional '{' listadoDeSentencias '}'

    '\n'  desplazar e ir al estado 27

    $default  reduce usando la regla 17 (saltoOpcional)

    saltoOpcional  ir al estado 269


estado 261

   41 sentenciaIfElse: IF '(' exp ')' saltoOpcional '{' listadoDeSentencias '}' $@1 sentenciaElse .

    $default  reduce usando la regla 41 (sentenciaIfElse)


estado 262

   48 sentenciaCase: CASE exp ':' listadoDeSentencias . BREAK ';'

    BREAK  desplazar e ir al estado 270


estado 263

   49 sentenciaCase: sentenciaCase DEFAULT ':' listadoDeSentencias .

    $default  reduce usando la regla 49 (sentenciaCase)


estado 264

   60 desarrolloFuncion: TIPO_DATO IDENTIFICADOR '(' listaParametrosFuncion ')' saltoOpcional '{' listadoDeSentencias '}' ';' .

    $default  reduce usando la regla 60 (desarrolloFuncion)


estado 265

   57 sentenciaDeclaracion: TIPO_DATO IDENTIFICADOR '[' expC ']' '=' '{' auxi '}' ';' .

    $default  reduce usando la regla 57 (sentenciaDeclaracion)


estado 266

   64 auxi: expC ',' auxi .

    $default  reduce usando la regla 64 (auxi)


estado 267

   32 sentenciaDoWhile: DO saltoOpcional '{' listadoDeSentencias '}' WHILE '(' exp ')' ';' .

    $default  reduce usando la regla 32 (sentenciaDoWhile)


estado 268

   33 sentenciaFor: FOR '(' sentenciaDecOAsig expC ';' incrementoParaFor ')' saltoOpcional '{' listadoDeSentencias '}' .

    $default  reduce usando la regla 33 (sentenciaFor)


estado 269

   44 sentenciaElse: ELSE saltoOpcional . '{' listadoDeSentencias '}'

    '{'  desplazar e ir al estado 271


estado 270

   48 sentenciaCase: CASE exp ':' listadoDeSentencias BREAK . ';'

    ';'  desplazar e ir al estado 272


estado 271

   44 sentenciaElse: ELSE saltoOpcional '{' . listadoDeSentencias '}'

    error          desplazar e ir al estado 143
    FOR            desplazar e ir al estado 5
    IF             desplazar e ir al estado 6
    RETURN         desplazar e ir al estado 144
    SWITCH         desplazar e ir al estado 7
    IDENTIFICADOR  desplazar e ir al estado 8
    TIPO_DATO      desplazar e ir al estado 62
    DO             desplazar e ir al estado 10
    WHILE          desplazar e ir al estado 11
    '\n'           desplazar e ir al estado 145

    error          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    FOR            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IF             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    RETURN         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    SWITCH         [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    IDENTIFICADOR  [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    TIPO_DATO      [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    DO             [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    WHILE          [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '\n'           [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]
    '}'            reduce usando la regla 20 (listadoDeSentencias)
    '}'            [reduce usando la regla 51 (listadoDeSentenciasDeDeclaracion)]

    invocacionFuncion                 ir al estado 146
    listadoDeSentencias               ir al estado 273
    sentenciaDoWhile                  ir al estado 148
    sentenciaFor                      ir al estado 149
    incrementoDecremento              ir al estado 150
    sentenciaIfElse                   ir al estado 151
    sentenciaWhile                    ir al estado 152
    sentenciaSwitch                   ir al estado 153
    sentenciaReturn                   ir al estado 154
    listadoDeSentenciasDeDeclaracion  ir al estado 155
    sentenciaDeclaracion              ir al estado 22
    sentenciaAsignacion               ir al estado 156
    parametro                         ir al estado 26


estado 272

   48 sentenciaCase: CASE exp ':' listadoDeSentencias BREAK ';' .

    $default  reduce usando la regla 48 (sentenciaCase)


estado 273

   44 sentenciaElse: ELSE saltoOpcional '{' listadoDeSentencias . '}'

    '}'  desplazar e ir al estado 274


estado 274

   44 sentenciaElse: ELSE saltoOpcional '{' listadoDeSentencias '}' .

    $default  reduce usando la regla 44 (sentenciaElse)
